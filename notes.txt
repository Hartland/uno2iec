use following guide for disabling COM port on PI:
http://www.hobbytronics.co.uk/raspberry-pi-serial-port

basically do:
disable login:
sudo nano /etc/inittab

This file has the command to enable the login prompt and this needs to be disabled. Edit the
file and move to the end of the file. You will see a line similar to

T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100

Disable it by adding a # character to the beginning. Save the file.

#T0:23:respawn:/sbin/getty -L ttyAMA0 115200 vt100


Disable Bootup Info

When the Raspberry Pi boots up, all the bootup information is sent to the serial port.
Disabling this bootup information is optional and you may want to leave this enabled as it
is sometimes useful to see what is happening at bootup. If you have a device connected (i.e.
Arduino) at bootup, it will receive this information over the serial port, so it is up to
you to decide whether this is a problem or not.

You can disable it by editing the file /boot/cmdline.txt

The contents of the file look like this

dwc_otg.lpm_enable=0 console=ttyAMA0,115200 kgdboc=ttyAMA0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait

Remove all references to ttyAMA0 (which is the name of the serial port).
The file will now look like this

dwc_otg.lpm_enable=0 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline rootwait

REBOOT!


test with minicom:
minicom -b 9600 -o -D /dev/ttyAMA0

--------------------------------------------------
qt support for serial port:

qextserialport is found here:
git clone https://code.google.com/p/qextserialport/

(simply build with qmake)



// Peer commands:
// Tries continuously to connect to host with:
// CONNECT
// response should be: OK><date><time><CR>

// Send debug string
// D<severityId, facilityId, debug string><CR>

// Register facility with abbreviating character and corresponding string to expand to on peer side.
// !<abbreviationChar, string><CR>

// Init file from LOAD"",8 command.
// 'I'

// Read byte(s) from current file of current (last selected) file system type. Current byte read/write byte number size determines number of bytes in sequence.
// The host returns 'B' followed by the byte(s) being read, or answers with 'E' if end of file has been reached.
// 'R'

// Write byte(s) to current file of current (last selected) file system type. Current byte read/write byte number size determines number of bytes in sequence.
// 'W<byte..n>'
